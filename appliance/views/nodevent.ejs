var NoDevent = {};

function onReady(user, opts, fn) {
  if (NoDevent.connected) {
    fn();
    return;
  }
  
  function Room(name) {
    var m = new EventEmitter();
    m.name = name;
    m.users = new EventEmitter();
    return m;
  }

  var connect_url = opts.host + (opts.namespace || "");
  var s = io.connect(connect_url );
  var rooms = {};
  
  NoDevent.room = function(name) {
    var r = rooms[name];
    if (!r) {
      r = rooms[name] = new Room(name);
    }
    return r;
  };
  
  NoDevent.join = function(room) {
    console.log(user);
    s.emit('join', {user : user, room : room});
    return NoDevent.room(room);
  };
  
  NoDevent.leave = function(room) {
    s.emit('leave', {user : user, room : room});
  }; 
  s.on(
    'event', 
    function (data) {
      var event = data.event;
      var room = data.room;
      var message = data.message;
      
      NoDevent.room(room).emit(event, message);
    });
  
  s.on(
    'join_room', 
    function (data) {
      NoDevent.room(data.room).users.emit('join', data.user);
    });
  
  s.on(
    'leave_room', 
    function (data) {
      NoDevent.room(data.room).users.emit('leave', data.user);
    });
    
  s.on(
    'room_members',
    function(data) {
      NoDevent.room(data.room).users.emit('members', data.members);
    });

  NoDevent.connected = true;
  fn();
}

NoDevent.ready = function(user, fn) {
  var opts = <%- JSON.stringify(opts) %>;

  var socket_io_url = opts.host + "/socket.io/socket.io.js";
  var event_emitter_url = opts.host + "/EventEmitter.js";
  head.js(     
    socket_io_url, event_emitter_url,
    function() {onReady(user, opts, fn);});
};



      